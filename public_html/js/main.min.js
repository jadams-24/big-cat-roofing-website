document.addEventListener('DOMContentLoaded', function(){
const mobileMenuToggle=document.querySelector('.mobile-menu-toggle');
const navMenu=document.querySelector('.nav-menu');
const body=document.body;
let menuOpen=false;
if (mobileMenuToggle && navMenu){
function toggleMenu(){
menuOpen=!menuOpen;
mobileMenuToggle.classList.toggle('active', menuOpen);
navMenu.classList.toggle('active', menuOpen);
body.classList.toggle('menu-open', menuOpen);
mobileMenuToggle.setAttribute('aria-expanded', menuOpen);
if (menuOpen){
body.style.overflow='hidden';
}else{
body.style.overflow='';
}
}
function closeMenu(){
if (menuOpen){
menuOpen=false;
mobileMenuToggle.classList.remove('active');
navMenu.classList.remove('active');
body.classList.remove('menu-open');
mobileMenuToggle.setAttribute('aria-expanded', 'false');
body.style.overflow='';
}
}
mobileMenuToggle.addEventListener('click', function(e){
e.preventDefault();
e.stopPropagation();
toggleMenu();
});
mobileMenuToggle.addEventListener('touchend', function(e){
e.preventDefault();
});
document.addEventListener('click', function(e){
if (menuOpen && !mobileMenuToggle.contains(e.target) && !navMenu.contains(e.target)){
closeMenu();
}
});
const navLinks=navMenu.querySelectorAll('a:not(.has-dropdown > a)');
navLinks.forEach(link =>{
link.addEventListener('click', function(){
closeMenu();
});
});
document.addEventListener('keydown', function(e){
if (e.key === 'Escape' && menuOpen){
closeMenu();
}
});
}
const dropdownToggles=document.querySelectorAll('.has-dropdown');
dropdownToggles.forEach(toggle =>{
const link=toggle.querySelector('a');
const dropdown=toggle.querySelector('.dropdown-menu');
if (link && dropdown){
link.addEventListener('click', function(e){
if (window.innerWidth <= 768){
e.preventDefault();
e.stopPropagation();
dropdownToggles.forEach(otherToggle =>{
if (otherToggle !== toggle){
otherToggle.classList.remove('active');
}
});
toggle.classList.toggle('active');
}
});
}
});
const anchorLinks=document.querySelectorAll('a[href^="#"]');
anchorLinks.forEach(link =>{
link.addEventListener('click', function(e){
e.preventDefault();
const targetId=this.getAttribute('href');
if (targetId === '#') return;
const targetElement=document.querySelector(targetId);
if (targetElement){
const headerHeight=document.querySelector('.main-header').offsetHeight;
const targetPosition=targetElement.offsetTop - headerHeight;
window.scrollTo({
top: targetPosition,
behavior: 'smooth'
});
}
});
});
const header=document.querySelector('.main-header');
let lastScrollTop=0;
window.addEventListener('scroll', function(){
const scrollTop=window.pageYOffset || document.documentElement.scrollTop;
if (scrollTop > lastScrollTop && scrollTop > 100){
header.classList.add('header-hidden');
}else{
header.classList.remove('header-hidden');
}
if (scrollTop > 50){
header.classList.add('header-scrolled');
}else{
header.classList.remove('header-scrolled');
}
lastScrollTop=scrollTop <= 0 ? 0 : scrollTop;
});
const phoneLinks=document.querySelectorAll('a[href^="tel:"]');
phoneLinks.forEach(link =>{
link.addEventListener('click', function(){
if (typeof gtag !== 'undefined'){
gtag('event', 'click',{
'event_category': 'Contact',
'event_label': 'Phone Call'
});
}
});
});
const lazyImages=document.querySelectorAll('img[data-src]');
if ('IntersectionObserver' in window){
const imageObserver=new IntersectionObserver((entries, observer) =>{
entries.forEach(entry =>{
if (entry.isIntersecting){
const img=entry.target;
img.src=img.dataset.src;
img.removeAttribute('data-src');
imageObserver.unobserve(img);
}
});
});
lazyImages.forEach(img => imageObserver.observe(img));
}else{
lazyImages.forEach(img =>{
img.src=img.dataset.src;
img.removeAttribute('data-src');
});
}
const animateElements=document.querySelectorAll('.animate-on-scroll');
if (animateElements.length > 0 && 'IntersectionObserver' in window){
const animateObserver=new IntersectionObserver((entries) =>{
entries.forEach(entry =>{
if (entry.isIntersecting){
entry.target.classList.add('animated');
animateObserver.unobserve(entry.target);
}
});
},{
threshold: 0.1
});
animateElements.forEach(el => animateObserver.observe(el));
}
const forms=document.querySelectorAll('form');
forms.forEach(form =>{
form.addEventListener('submit', function(e){
const requiredFields=form.querySelectorAll('[required]');
let isValid=true;
requiredFields.forEach(field =>{
if (!field.value.trim()){
isValid=false;
field.classList.add('error');
}else{
field.classList.remove('error');
}
if (field.type === 'email' && field.value){
const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;
if (!emailRegex.test(field.value)){
isValid=false;
field.classList.add('error');
}
}
if (field.type === 'tel' && field.value){
const phoneRegex=/^[\d\s\-\(\)]+$/;
if (!phoneRegex.test(field.value) || field.value.replace(/\D/g, '').length < 10){
isValid=false;
field.classList.add('error');
}
}
});
if (!isValid){
e.preventDefault();
return false;
}
});
const inputs=form.querySelectorAll('input, textarea, select');
inputs.forEach(input =>{
input.addEventListener('input', function(){
this.classList.remove('error');
});
});
});
if ('serviceWorker' in navigator){
window.addEventListener('load', function(){
navigator.serviceWorker.register('/sw.js').then(function(registration){
console.log('ServiceWorker registration successful');
}, function(err){
console.log('ServiceWorker registration failed: ', err);
});
});
}
});
function debounce(func, wait){
let timeout;
return function executedFunction(...args){
const later=() =>{
clearTimeout(timeout);
func(...args);
};
clearTimeout(timeout);
timeout=setTimeout(later, wait);
};
}
function throttle(func, limit){
let inThrottle;
return function(){
const args=arguments;
const context=this;
if (!inThrottle){
func.apply(context, args);
inThrottle=true;
setTimeout(() => inThrottle=false, limit);
}
};
}